[
  "error BaseConnextFacet__getAdoptedAsset_assetNotFound()",
  "error BaseConnextFacet__getApprovedCanonicalId_notAllowlisted()",
  "error BaseConnextFacet__nonReentrant_reentrantCall()",
  "error BaseConnextFacet__nonXCallReentrant_reentrantCall()",
  "error BaseConnextFacet__onlyOwnerOrAdmin_notOwnerOrAdmin()",
  "error BaseConnextFacet__onlyOwnerOrRouter_notOwnerOrRouter()",
  "error BaseConnextFacet__onlyOwnerOrWatcher_notOwnerOrWatcher()",
  "error BaseConnextFacet__onlyOwner_notOwner()",
  "error BaseConnextFacet__onlyProposed_notProposedOwner()",
  "error BaseConnextFacet__whenNotPaused_paused()",
  "error AssetLogic__getConfig_notRegistered()",
  "error AssetLogic__getTokenIndexFromStableSwapPool_notExist()",
  "error AssetLogic__handleIncomingAsset_feeOnTransferNotSupported()",
  "error AssetLogic__handleIncomingAsset_nativeAssetNotSupported()",
  "error AssetLogic__handleOutgoingAsset_notNative()",
  "error BridgeFacet__addRemote_invalidDomain()",
  "error BridgeFacet__addRemote_invalidRouter()",
  "error BridgeFacet__addSequencer_alreadyApproved()",
  "error BridgeFacet__addSequencer_invalidSequencer()",
  "error BridgeFacet__bumpTransfer_noRelayerVault()",
  "error BridgeFacet__bumpTransfer_valueIsZero()",
  "error BridgeFacet__excecute_insufficientGas()",
  "error BridgeFacet__executePortalTransfer_insufficientAmountWithdrawn()",
  "error BridgeFacet__execute_badFastLiquidityStatus()",
  "error BridgeFacet__execute_externalCallFailed()",
  "error BridgeFacet__execute_invalidRouterSignature()",
  "error BridgeFacet__execute_invalidSequencerSignature()",
  "error BridgeFacet__execute_maxRoutersExceeded()",
  "error BridgeFacet__execute_notApprovedForPortals()",
  "error BridgeFacet__execute_notReconciled()",
  "error BridgeFacet__execute_notSupportedRouter()",
  "error BridgeFacet__execute_notSupportedSequencer()",
  "error BridgeFacet__execute_unapprovedSender()",
  "error BridgeFacet__execute_wrongDomain()",
  "error BridgeFacet__forceReceiveLocal_notDestination()",
  "error BridgeFacet__forceUpdateSlippage_invalidSlippage()",
  "error BridgeFacet__forceUpdateSlippage_notDestination()",
  "error BridgeFacet__mustHaveRemote_destinationNotSupported()",
  "error BridgeFacet__onlyDelegate_notDelegate()",
  "error BridgeFacet__removeSequencer_notApproved()",
  "error BridgeFacet__setXAppConnectionManager_domainsDontMatch()",
  "error BridgeFacet__xcall_capReached()",
  "error BridgeFacet__xcall_emptyTo()",
  "error BridgeFacet__xcall_invalidSlippage()",
  "error BridgeFacet__xcall_nativeAssetNotSupported()",
  "error BridgeFacet_xcall__emptyLocalAsset()",
  "event AavePortalMintUnbacked(bytes32 indexed,address indexed,address,uint256)",
  "event Executed(bytes32 indexed,address indexed,address indexed,tuple(tuple(uint32,uint32,uint32,address,address,bool,bytes,uint256,address,uint256,uint256,uint256,bytes32),address[],bytes[],address,bytes),address,uint256,address)",
  "event ExternalCalldataExecuted(bytes32 indexed,bool,bytes)",
  "event ForceReceiveLocal(bytes32 indexed)",
  "event RemoteAdded(uint32,address,address)",
  "event SequencerAdded(address,address)",
  "event SequencerRemoved(address,address)",
  "event SlippageUpdated(bytes32 indexed,uint256)",
  "event TransferRelayerFeesIncreased(bytes32 indexed,uint256,address)",
  "event XAppConnectionManagerSet(address,address)",
  "event XCalled(bytes32 indexed,uint256 indexed,bytes32 indexed,tuple(uint32,uint32,uint32,address,address,bool,bytes,uint256,address,uint256,uint256,uint256,bytes32),address,uint256,address,bytes)",
  "function addSequencer(address)",
  "function approvedSequencers(address) view returns (bool)",
  "function bumpTransfer(bytes32) payable",
  "function domain() view returns (uint32)",
  "function enrollRemoteRouter(uint32,bytes32)",
  "function execute(tuple(tuple(uint32,uint32,uint32,address,address,bool,bytes,uint256,address,uint256,uint256,uint256,bytes32),address[],bytes[],address,bytes)) returns (bytes32)",
  "function forceReceiveLocal(tuple(uint32,uint32,uint32,address,address,bool,bytes,uint256,address,uint256,uint256,uint256,bytes32))",
  "function forceUpdateSlippage(tuple(uint32,uint32,uint32,address,address,bool,bytes,uint256,address,uint256,uint256,uint256,bytes32),uint256)",
  "function nonce() view returns (uint256)",
  "function remote(uint32) view returns (address)",
  "function removeSequencer(address)",
  "function routedTransfers(bytes32) view returns (address[])",
  "function setXAppConnectionManager(address)",
  "function transferStatus(bytes32) view returns (uint8)",
  "function xAppConnectionManager() view returns (address)",
  "function xcall(uint32,address,address,address,uint256,uint256,bytes) payable returns (bytes32)",
  "function xcallIntoLocal(uint32,address,address,address,uint256,uint256,bytes) payable returns (bytes32)",
  "event DiamondCut(tuple(address,uint8,bytes4[])[],address,bytes)",
  "event DiamondCutProposed(tuple(address,uint8,bytes4[])[],address,bytes,uint256)",
  "event DiamondCutRescinded(tuple(address,uint8,bytes4[])[],address,bytes)",
  "function diamondCut(tuple(address,uint8,bytes4[])[],address,bytes)",
  "function getAcceptanceTime(tuple(address,uint8,bytes4[])[],address,bytes) view returns (uint256)",
  "function proposeDiamondCut(tuple(address,uint8,bytes4[])[],address,bytes)",
  "function rescindDiamondCut(tuple(address,uint8,bytes4[])[],address,bytes)",
  "function facetAddress(bytes4) view returns (address)",
  "function facetAddresses() view returns (address[])",
  "function facetFunctionSelectors(address) view returns (bytes4[])",
  "function facets() view returns (tuple(address,bytes4[])[])",
  "function supportsInterface(bytes4) view returns (bool)",
  "error AssetLogic__getConfig_notRegistered()",
  "error AssetLogic__getTokenIndexFromStableSwapPool_notExist()",
  "error AssetLogic__handleIncomingAsset_feeOnTransferNotSupported()",
  "error AssetLogic__handleIncomingAsset_nativeAssetNotSupported()",
  "error PortalFacet__repayAavePortalFor_invalidAsset()",
  "error PortalFacet__repayAavePortalFor_zeroAmount()",
  "error PortalFacet__repayAavePortal_assetNotApproved()",
  "error PortalFacet__repayAavePortal_insufficientFunds()",
  "error PortalFacet__setAavePortalFee_invalidFee()",
  "event AavePoolUpdated(address,address)",
  "event AavePortalFeeUpdated(uint256,address)",
  "event AavePortalRepayment(bytes32 indexed,address,uint256,uint256,address)",
  "function aavePool() view returns (address)",
  "function aavePortalFee() view returns (uint256)",
  "function getAavePortalDebt(bytes32) view returns (uint256)",
  "function getAavePortalFeeDebt(bytes32) view returns (uint256)",
  "function repayAavePortal(tuple(uint32,uint32,uint32,address,address,bool,bytes,uint256,address,uint256,uint256,uint256,bytes32),uint256,uint256,uint256)",
  "function repayAavePortalFor(tuple(uint32,uint32,uint32,address,address,bool,bytes,uint256,address,uint256,uint256,uint256,bytes32),address,uint256,uint256) payable",
  "function setAavePool(address)",
  "function setAavePortalFee(uint256)",
  "error ProposedOwnableFacet__acceptProposedOwner_noOwnershipChange()",
  "error ProposedOwnableFacet__assignRoleAdmin_invalidInput()",
  "error ProposedOwnableFacet__assignRoleRouter_invalidInput()",
  "error ProposedOwnableFacet__assignRoleWatcher_invalidInput()",
  "error ProposedOwnableFacet__delayElapsed_delayNotElapsed()",
  "error ProposedOwnableFacet__proposeAssetAllowlistRemoval_noOwnershipChange()",
  "error ProposedOwnableFacet__proposeNewOwner_invalidProposal()",
  "error ProposedOwnableFacet__proposeNewOwner_noOwnershipChange()",
  "error ProposedOwnableFacet__proposeRouterAllowlistRemoval_noOwnershipChange()",
  "error ProposedOwnableFacet__removeAssetAllowlist_noOwnershipChange()",
  "error ProposedOwnableFacet__removeAssetAllowlist_noProposal()",
  "error ProposedOwnableFacet__removeRouterAllowlist_noOwnershipChange()",
  "error ProposedOwnableFacet__removeRouterAllowlist_noProposal()",
  "error ProposedOwnableFacet__revokeRole_invalidInput()",
  "event AssignRoleAdmin(address)",
  "event AssignRoleRouter(address)",
  "event AssignRoleWatcher(address)",
  "event OwnershipProposed(address indexed)",
  "event OwnershipTransferred(address indexed,address indexed)",
  "event Paused()",
  "event RevokeRole(address,uint8)",
  "event RouterAllowlistRemovalProposed(uint256)",
  "event RouterAllowlistRemoved(bool)",
  "event Unpaused()",
  "function acceptProposedOwner()",
  "function assignRoleAdmin(address)",
  "function assignRoleRouterAdmin(address)",
  "function assignRoleWatcher(address)",
  "function delay() view returns (uint256)",
  "function owner() view returns (address)",
  "function pause()",
  "function paused() view returns (bool)",
  "function proposeNewOwner(address)",
  "function proposeRouterAllowlistRemoval()",
  "function proposed() view returns (address)",
  "function proposedTimestamp() view returns (uint256)",
  "function queryRole(address) view returns (uint8)",
  "function removeRouterAllowlist()",
  "function revokeRole(address)",
  "function routerAllowlistRemoved() view returns (bool)",
  "function routerAllowlistTimestamp() view returns (uint256)",
  "function unpause()",
  "error RelayerFacet__addRelayer_alreadyApproved()",
  "error RelayerFacet__removeRelayer_notApproved()",
  "error RelayerFacet__setRelayerFeeVault_invalidRelayerFeeVault()",
  "event RelayerAdded(address,address)",
  "event RelayerFeeVaultUpdated(address,address,address)",
  "event RelayerRemoved(address,address)",
  "function addRelayer(address)",
  "function approvedRelayers(address) view returns (bool)",
  "function relayerFeeVault() view returns (address)",
  "function removeRelayer(address)",
  "function setRelayerFeeVault(address)",
  "error AssetLogic__handleIncomingAsset_feeOnTransferNotSupported()",
  "error AssetLogic__handleIncomingAsset_nativeAssetNotSupported()",
  "error AssetLogic__handleOutgoingAsset_notNative()",
  "error RoutersFacet__acceptProposedRouterOwner_badCaller()",
  "error RoutersFacet__acceptProposedRouterOwner_notElapsed()",
  "error RoutersFacet__addLiquidityForRouter_amountIsZero()",
  "error RoutersFacet__addLiquidityForRouter_badRouter()",
  "error RoutersFacet__addLiquidityForRouter_capReached()",
  "error RoutersFacet__addLiquidityForRouter_routerEmpty()",
  "error RoutersFacet__approveRouterForPortal_alreadyApproved()",
  "error RoutersFacet__approveRouterForPortal_notAdded()",
  "error RoutersFacet__approveRouter_alreadyAdded()",
  "error RoutersFacet__approveRouter_routerEmpty()",
  "error RoutersFacet__initializeRouter_configNotEmpty()",
  "error RoutersFacet__onlyRouterOwner_notRouterOwner()",
  "error RoutersFacet__proposeRouterOwner_badRouter()",
  "error RoutersFacet__proposeRouterOwner_notNewOwner()",
  "error RoutersFacet__removeRouterLiquidityFor_notOwner()",
  "error RoutersFacet__removeRouterLiquidity_amountIsZero()",
  "error RoutersFacet__removeRouterLiquidity_insufficientFunds()",
  "error RoutersFacet__removeRouterLiquidity_recipientEmpty()",
  "error RoutersFacet__setLiquidityFeeNumerator_tooLarge()",
  "error RoutersFacet__setLiquidityFeeNumerator_tooSmall()",
  "error RoutersFacet__setMaxRoutersPerTransfer_invalidMaxRoutersPerTransfer()",
  "error RoutersFacet__setRouterOwner_noChange()",
  "error RoutersFacet__setRouterRecipient_notNewRecipient()",
  "error RoutersFacet__unapproveRouterForPortal_notApproved()",
  "error RoutersFacet__unapproveRouter_notAdded()",
  "error RoutersFacet__unapproveRouter_routerEmpty()",
  "event LiquidityFeeNumeratorUpdated(uint256,address)",
  "event MaxRoutersPerTransferUpdated(uint256,address)",
  "event RouterAdded(address indexed,address)",
  "event RouterApprovedForPortal(address,address)",
  "event RouterInitialized(address indexed)",
  "event RouterLiquidityAdded(address indexed,address,bytes32,uint256,address)",
  "event RouterLiquidityRemoved(address indexed,address,address,bytes32,uint256,address)",
  "event RouterOwnerAccepted(address indexed,address indexed,address indexed)",
  "event RouterOwnerProposed(address indexed,address indexed,address indexed)",
  "event RouterRecipientSet(address indexed,address indexed,address indexed)",
  "event RouterRemoved(address indexed,address)",
  "event RouterUnapprovedForPortal(address,address)",
  "function LIQUIDITY_FEE_DENOMINATOR() pure returns (uint256)",
  "function LIQUIDITY_FEE_NUMERATOR() view returns (uint256)",
  "function acceptProposedRouterOwner(address)",
  "function addRouterLiquidity(uint256,address) payable",
  "function addRouterLiquidityFor(uint256,address,address) payable",
  "function approveRouter(address)",
  "function approveRouterForPortal(address)",
  "function getProposedRouterOwner(address) view returns (address)",
  "function getProposedRouterOwnerTimestamp(address) view returns (uint256)",
  "function getRouterApproval(address) view returns (bool)",
  "function getRouterApprovalForPortal(address) view returns (bool)",
  "function getRouterOwner(address) view returns (address)",
  "function getRouterRecipient(address) view returns (address)",
  "function initializeRouter(address,address)",
  "function maxRoutersPerTransfer() view returns (uint256)",
  "function proposeRouterOwner(address,address)",
  "function removeRouterLiquidity(tuple(uint32,bytes32),uint256,address)",
  "function removeRouterLiquidityFor(tuple(uint32,bytes32),uint256,address,address)",
  "function routerBalances(address,address) view returns (uint256)",
  "function setLiquidityFeeNumerator(uint256)",
  "function setMaxRoutersPerTransfer(uint256)",
  "function setRouterRecipient(address,address)",
  "function unapproveRouter(address)",
  "function unapproveRouterForPortal(address)",
  "error AssetLogic__handleIncomingAsset_feeOnTransferNotSupported()",
  "error AssetLogic__handleIncomingAsset_nativeAssetNotSupported()",
  "error AssetLogic__handleOutgoingAsset_notNative()",
  "error StableSwapFacet__deadlineCheck_deadlineNotMet()",
  "error StableSwapFacet__getSwapTokenBalance_indexOutOfRange()",
  "error StableSwapFacet__getSwapTokenIndex_notExist()",
  "error StableSwapFacet__getSwapToken_outOfRange()",
  "event AddLiquidity(bytes32 indexed,address indexed,uint256[],uint256[],uint256,uint256)",
  "event NewAdminFee(bytes32 indexed,uint256)",
  "event NewSwapFee(bytes32 indexed,uint256)",
  "event RemoveLiquidity(bytes32 indexed,address indexed,uint256[],uint256)",
  "event RemoveLiquidityImbalance(bytes32 indexed,address indexed,uint256[],uint256[],uint256,uint256)",
  "event RemoveLiquidityOne(bytes32 indexed,address indexed,uint256,uint256,uint256,uint256)",
  "event TokenSwap(bytes32 indexed,address indexed,uint256,uint256,uint128,uint128)",
  "function addSwapLiquidity(bytes32,uint256[],uint256,uint256) returns (uint256)",
  "function calculateRemoveSwapLiquidity(bytes32,uint256) view returns (uint256[])",
  "function calculateRemoveSwapLiquidityOneToken(bytes32,uint256,uint8) view returns (uint256)",
  "function calculateSwap(bytes32,uint8,uint8,uint256) view returns (uint256)",
  "function calculateSwapTokenAmount(bytes32,uint256[],bool) view returns (uint256)",
  "function getSwapA(bytes32) view returns (uint256)",
  "function getSwapAPrecise(bytes32) view returns (uint256)",
  "function getSwapAdminBalance(bytes32,uint256) view returns (uint256)",
  "function getSwapLPToken(bytes32) view returns (address)",
  "function getSwapStorage(bytes32) view returns (tuple(bytes32,uint256,uint256,uint256,uint256,uint256,uint256,address,address[],uint256[],uint256[],uint256[],bool,uint256))",
  "function getSwapToken(bytes32,uint8) view returns (address)",
  "function getSwapTokenBalance(bytes32,uint8) view returns (uint256)",
  "function getSwapTokenIndex(bytes32,address) view returns (uint8)",
  "function getSwapVirtualPrice(bytes32) view returns (uint256)",
  "function removeSwapLiquidity(bytes32,uint256,uint256[],uint256) returns (uint256[])",
  "function removeSwapLiquidityImbalance(bytes32,uint256[],uint256,uint256) returns (uint256)",
  "function removeSwapLiquidityOneToken(bytes32,uint256,uint8,uint256,uint256) returns (uint256)",
  "function swap(bytes32,uint8,uint8,uint256,uint256,uint256) returns (uint256)",
  "function swapExact(bytes32,uint256,address,address,uint256,uint256) returns (uint256)",
  "function swapExactOut(bytes32,uint256,address,address,uint256,uint256) returns (uint256)",
  "error AssetLogic__getConfig_notRegistered()",
  "error TokenFacet__addAssetId_alreadyAdded()",
  "error TokenFacet__addAssetId_badBurn()",
  "error TokenFacet__addAssetId_badMint()",
  "error TokenFacet__enrollAdoptedAndLocalAssets_emptyCanonical()",
  "error TokenFacet__removeAssetId_invalidParams()",
  "error TokenFacet__removeAssetId_notAdded()",
  "error TokenFacet__removeAssetId_remainsCustodied()",
  "error TokenFacet__setLiquidityCap_notCanonicalDomain()",
  "error TokenFacet__setupAssetWithDeployedRepresentation_invalidRepresentation()",
  "error TokenFacet__setupAssetWithDeployedRepresentation_onCanonicalDomain()",
  "error TokenFacet__setupAsset_invalidCanonicalConfiguration()",
  "error TokenFacet__setupAsset_representationListed()",
  "error TokenFacet__updateDetails_localNotFound()",
  "error TokenFacet__updateDetails_notApproved()",
  "error TokenFacet__updateDetails_onlyRemote()",
  "event AssetAdded(bytes32 indexed,bytes32 indexed,uint32 indexed,address,address,address)",
  "event AssetRemoved(bytes32 indexed,address)",
  "event LiquidityCapUpdated(bytes32 indexed,bytes32 indexed,uint32 indexed,uint256,address)",
  "event StableSwapAdded(bytes32 indexed,bytes32 indexed,uint32 indexed,address,address)",
  "event TokenDeployed(uint32 indexed,bytes32 indexed,address indexed)",
  "function addStableSwapPool(tuple(uint32,bytes32),address)",
  "function adoptedToCanonical(address) view returns (tuple(uint32,bytes32))",
  "function adoptedToLocalExternalPools(tuple(uint32,bytes32)) view returns (address)",
  "function adoptedToLocalExternalPools(bytes32) view returns (address)",
  "function approvedAssets(bytes32) view returns (bool)",
  "function approvedAssets(tuple(uint32,bytes32)) view returns (bool)",
  "function canonicalToAdopted(bytes32) view returns (address)",
  "function canonicalToAdopted(tuple(uint32,bytes32)) view returns (address)",
  "function canonicalToRepresentation(bytes32) view returns (address)",
  "function canonicalToRepresentation(tuple(uint32,bytes32)) view returns (address)",
  "function getCustodiedAmount(bytes32) view returns (uint256)",
  "function getLocalAndAdoptedToken(bytes32,uint32) view returns (address, address)",
  "function getTokenId(address) view returns (tuple(uint32,bytes32))",
  "function removeAssetId(tuple(uint32,bytes32),address,address)",
  "function removeAssetId(bytes32,address,address)",
  "function representationToCanonical(address) view returns (tuple(uint32,bytes32))",
  "function setupAsset(tuple(uint32,bytes32),uint8,string,string,address,address,uint256) returns (address)",
  "function setupAssetWithDeployedRepresentation(tuple(uint32,bytes32),address,address,address) returns (address)",
  "function updateDetails(tuple(uint32,bytes32),string,string)",
  "function updateLiquidityCap(tuple(uint32,bytes32),uint256)"
]
